// <auto-generated />
using System;
using CoffeeMachine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeMachine.Data.Migrations
{
    [DbContext(typeof(CoffeeMachineContext))]
    partial class CoffeeMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeMachine.Data.Models.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OwnerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Badge");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OwnerFirstName = "John",
                            OwnerLastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            OwnerFirstName = "Jane",
                            OwnerLastName = "Doe"
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Data.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drink");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tea"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chocolate"
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BadgeId")
                        .HasColumnType("int");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SugarAmount")
                        .HasColumnType("int");

                    b.Property<bool>("WithMug")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BadgeId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BadgeId = 1,
                            DrinkId = 1,
                            OrderTime = new DateTime(2020, 5, 10, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            SugarAmount = 3,
                            WithMug = true
                        },
                        new
                        {
                            Id = 2,
                            BadgeId = 1,
                            DrinkId = 2,
                            OrderTime = new DateTime(2020, 5, 10, 17, 22, 13, 0, DateTimeKind.Unspecified),
                            SugarAmount = 2,
                            WithMug = true
                        },
                        new
                        {
                            Id = 3,
                            BadgeId = 2,
                            DrinkId = 2,
                            OrderTime = new DateTime(2020, 5, 10, 14, 11, 29, 0, DateTimeKind.Unspecified),
                            SugarAmount = 0,
                            WithMug = false
                        },
                        new
                        {
                            Id = 4,
                            BadgeId = 2,
                            DrinkId = 3,
                            OrderTime = new DateTime(2020, 5, 10, 15, 27, 52, 0, DateTimeKind.Unspecified),
                            SugarAmount = 1,
                            WithMug = false
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Data.Models.Order", b =>
                {
                    b.HasOne("CoffeeMachine.Data.Models.Badge", null)
                        .WithMany("Orders")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
